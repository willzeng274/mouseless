#!/bin/bash

# --- Script to convert a single PNG to a multi-resolution ICNS file on macOS ---

# Function to display usage instructions
usage() {
    echo "Usage: $0 <input_png_file>"
    echo "Example: $0 my_large_icon.png"
    echo "The output .icns file will be saved in the same directory as the input PNG."
    exit 1
}

# --- Configuration ---
# Standard icon names and their pixel dimensions required for an .iconset
declare -a ICON_NAMES=(
    "icon_16x16.png"
    "icon_16x16@2x.png"
    "icon_32x32.png"
    "icon_32x32@2x.png"
    "icon_128x128.png"
    "icon_128x128@2x.png"
    "icon_256x256.png"
    "icon_256x256@2x.png"
    "icon_512x512.png"
    "icon_512x512@2x.png"
)

declare -a ICON_PIXEL_SIZES=(
    16  # for icon_16x16.png
    32  # for icon_16x16@2x.png
    32  # for icon_32x32.png
    64  # for icon_32x32@2x.png
    128 # for icon_128x128.png
    256 # for icon_128x128@2x.png
    256 # for icon_256x256.png
    512 # for icon_256x256@2x.png
    512 # for icon_512x512.png
    1024 # for icon_512x512@2x.png
)
LARGEST_REQUIRED_SIZE=1024

# --- Input Validation ---
if [ "$#" -ne 1 ]; then
    echo "Error: Incorrect number of arguments."
    usage
fi

INPUT_PNG="$1"

if [ ! -f "$INPUT_PNG" ]; then
    echo "Error: Input file '$INPUT_PNG' not found."
    exit 1
fi

# Check if sips and iconutil are available (macOS specific tools)
if ! command -v sips &> /dev/null; then
    echo "Error: 'sips' command not found. This script requires macOS."
    exit 1
fi

if ! command -v iconutil &> /dev/null; then
    echo "Error: 'iconutil' command not found. This script requires macOS."
    exit 1
fi

# --- Setup Paths and Names ---
SOURCE_DIR=$(dirname -- "$INPUT_PNG")
SOURCE_FILENAME=$(basename -- "$INPUT_PNG")
BASENAME_NO_EXT="${SOURCE_FILENAME%.*}" # Removes the last extension

ICONSET_NAME="${BASENAME_NO_EXT}.iconset"
ICNS_NAME="${BASENAME_NO_EXT}.icns"

# Output paths will be in the same directory as the input PNG
ICONSET_PATH="${SOURCE_DIR}/${ICONSET_NAME}"
OUTPUT_ICNS_PATH="${SOURCE_DIR}/${ICNS_NAME}"

echo "Starting ICNS generation..."
echo "Input PNG: $INPUT_PNG"
echo "Output ICNS will be: $OUTPUT_ICNS_PATH"
echo "Temporary iconset will be created at: $ICONSET_PATH"

# --- Check Input Image Properties ---
IMG_WIDTH=$(sips -g pixelWidth "$INPUT_PNG" | awk '/pixelWidth/ {print $2}')
IMG_HEIGHT=$(sips -g pixelHeight "$INPUT_PNG" | awk '/pixelHeight/ {print $2}')

if [ -z "$IMG_WIDTH" ] || [ -z "$IMG_HEIGHT" ]; then
    echo "Error: Could not determine dimensions of '$INPUT_PNG'. Is it a valid image file?"
    exit 1
fi

if [ "$IMG_WIDTH" -ne "$IMG_HEIGHT" ]; then
    echo "Warning: The input PNG '$INPUT_PNG' is ${IMG_WIDTH}x${IMG_HEIGHT} pixels and not perfectly square."
    echo "         Icons should ideally be square. 'sips' will attempt to fit the image, but results may vary."
fi

if [ "$IMG_WIDTH" -lt "$LARGEST_REQUIRED_SIZE" ] || [ "$IMG_HEIGHT" -lt "$LARGEST_REQUIRED_SIZE" ]; then
    echo "Warning: The input PNG is ${IMG_WIDTH}x${IMG_HEIGHT} pixels."
    echo "         For best quality, a source image of at least ${LARGEST_REQUIRED_SIZE}x${LARGEST_REQUIRED_SIZE} pixels is recommended."
    echo "         Some generated icon sizes will be upscaled, which may result in reduced visual quality."
fi

# --- Create Temporary Iconset Directory ---
mkdir -p "$ICONSET_PATH"
if [ ! -d "$ICONSET_PATH" ]; then
    echo "Error: Failed to create temporary iconset directory '$ICONSET_PATH'."
    exit 1
fi

# --- Generate Different Icon Sizes using sips ---
echo "Generating different icon resolutions..."
SUCCESS_COUNT=0
for i in "${!ICON_NAMES[@]}"; do
    TARGET_SIZE=${ICON_PIXEL_SIZES[$i]}
    TARGET_NAME=${ICON_NAMES[$i]}
    OUTPUT_FILE_PATH="${ICONSET_PATH}/${TARGET_NAME}"

    echo "Creating $TARGET_NAME (${TARGET_SIZE}x${TARGET_SIZE} pixels)..."
    # Use sips to resize and output. -z ensures it fits within the dimensions, padding if aspect ratio differs (for non-square sources).
    # For square sources, it's a direct resize.
    sips -z "$TARGET_SIZE" "$TARGET_SIZE" "$INPUT_PNG" --out "$OUTPUT_FILE_PATH" > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        ((SUCCESS_COUNT++))
    else
        echo "Warning: Failed to create $TARGET_NAME. 'sips' command encountered an issue."
    fi
done

if [ "$SUCCESS_COUNT" -eq 0 ]; then
    echo "Error: No icon sizes could be generated by sips. Aborting."
    rm -rf "$ICONSET_PATH" # Clean up
    exit 1
elif [ "$SUCCESS_COUNT" -lt "${#ICON_NAMES[@]}" ]; then
    echo "Warning: Not all icon sizes were generated successfully. The resulting .icns file might be incomplete."
fi

# --- Create ICNS File using iconutil ---
echo "Creating ICNS file: $OUTPUT_ICNS_PATH"
iconutil -c icns "$ICONSET_PATH" -o "$OUTPUT_ICNS_PATH"

if [ $? -ne 0 ]; then
    echo "Error: 'iconutil' failed to create ICNS file from '$ICONSET_PATH'."
    # It's useful to keep the iconset folder for debugging if iconutil fails
    echo "The iconset folder '$ICONSET_PATH' has been kept for inspection."
    exit 1
fi

# --- Cleanup Temporary Iconset Directory ---
echo "Cleaning up temporary iconset directory: $ICONSET_PATH"
rm -rf "$ICONSET_PATH"

# --- Completion Message ---
echo ""
echo "Successfully created ICNS file: $OUTPUT_ICNS_PATH"
exit 0